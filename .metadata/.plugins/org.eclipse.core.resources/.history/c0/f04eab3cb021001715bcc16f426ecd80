package com.ComputerNetwork;

import javax.swing.*;

import java.awt.*;
import java.awt.event.*;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintStream;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Date;
@SuppressWarnings("serial")
public class ChatRoom extends JFrame implements ActionListener,KeyListener,Runnable{
	JLabel l1 = new JLabel("聊天记录：",JLabel.LEFT);
	JLabel l2 = new JLabel("输入框：",JLabel.LEFT);
	JButton send = new JButton("发送");
	JButton siliao = new JButton("siliao");
	JTextArea log = new JTextArea();
	JTextArea input = new JTextArea();
	int port = 3333;
//	DatagramSocket reSocket,seSocket;
//	DatagramPacket rePacket,sePacket;
	String ipaddress;
	Thread t = new Thread(this);
	@SuppressWarnings("resource")
	public void run(){
		//if(Thread.currentThread()==t){
			try{
				System.out.println("I'm in run()(receiving)");
				System.out.println(Thread.currentThread().getName());
				DatagramSocket reSocket = new DatagramSocket(port);
				//建立端口号为 3333的DatagramSocket
				byte[] buf = new byte[1024];
				Object obj = null;
				DatagramPacket rePacket = new DatagramPacket(buf,buf.length);
				while(true){
					
					synchronized (obj) {
						notify();
						//建立DatagramPacket对象
						reSocket.receive(rePacket);
						//接收数据抱包
						//					ByteArrayInputStream bin =new ByteArrayInputStream(rePacket.getData());
						//					BufferedReader reader =new BufferedReader(new InputStreamReader(bin));
						String s = new String(rePacket.getData(), 0,
								rePacket.getLength());
						log.append("他：" + s);
						log.append("\n");
						rePacket = new DatagramPacket(buf, buf.length);
						wait();
					}
				}
			}catch(Exception e){
				log.append("in run():"+e+"\n");
			}
		//}
		
//		reMessage();
	}
	public  ChatRoom(String ip){
		super("MyQQ");
		ipaddress = ip;
		this.setLayout(null);

		this.setSize(420, 480);
		
		l1.setBounds(10, 0, 400, 20);
		this.add(l1);
		
		
		log.setEditable(false);
		log.setBounds(0, 20, 400, 205);
		this.add(log);

		
		l2.setBounds(0, 225, 400, 20);
		this.add(l2);

		
		input.setEditable(true);
		input.setBounds(0,245,400,155);
		this.add(input);

		
		send.setBounds(170, 400, 60, 40);
		siliao.setBounds(230, 400, 60, 40);
		this.add(send);
		this.add(siliao);

		this.setVisible(true);
		this.setResizable(false);
//		try{
//			seSocket = new DatagramSocket(3000);
//		}catch(IOException e){
//			log.append("in send():"+e + "\n");
//		}
		send.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				seMessage();
			}
		});
		siliao.addActionListener(this);
//		if(!(t.isAlive())){
//			t = new Thread(this);
//			t.start();
//		}
	}
	
//	@SuppressWarnings("resource")
//	public void reMessage(){
//		try{
//			DatagramSocket reSocket = new DatagramSocket(3333);
//			//建立端口号为 9090的DatagramSocket
//			byte[] buf = new byte[500];
//			DatagramPacket rePacket = new DatagramPacket(buf,buf.length);
//			while(true){
//				
//				//建立DatagramPacket对象
//				reSocket.receive(rePacket);
//				//接收数据抱包
//				ByteArrayInputStream bin =new ByteArrayInputStream(rePacket.getData());
//				BufferedReader reader =new BufferedReader(new InputStreamReader(bin));
//				log.append("他：" +reader.readLine());
//				log.append("\n");
//				rePacket =new DatagramPacket(buf,buf.length);
//			}
//		}catch(Exception e){
//			log.append("in receive():"+e+"\n");
//		}
//	}
	@SuppressWarnings("resource")
	public void seMessage(){
		try {
//			ByteArrayOutputStream bos = new ByteArrayOutputStream();
//			PrintStream ps = new PrintStream(bos);
//			ps.print(input.getText());
//			byte buf[] = bos.toByteArray();
			String msg = input.getText();
			byte[] buf = msg.getBytes();
			DatagramPacket sePacket = new DatagramPacket(buf,buf.length,
					InetAddress.getByName(ipaddress),port);
			System.out.println("in send():"+ipaddress);
			
			DatagramSocket seSocket = new DatagramSocket();
			seSocket.send(sePacket);
			log.append("我：" + input.getText()+"\n");
			input.setText("");
		}  catch (IOException e) {
			// TODO Auto-generated catch block
			log.append("in send():"+e +"\n");
		}
	}
	public void actionPerformed(ActionEvent e){
		if(e.getSource()== send){
			seMessage();
		}else if(e.getSource()== siliao){
			if(!(t.isAlive())){
				t = new Thread(this);	
			}
			t.start();
			
		}
	}
	public void windowClosing(WindowEvent e){
		System.out.println("聊天程序已关闭，再见！\n");
		System.exit(0);
	}
	public void keyPressed(KeyEvent e){
		if(e.getSource() == input){
			if(e.getKeyChar() ==KeyEvent.VK_ENTER){
				seMessage();
			}
		}
	}
	public void keyTyped(KeyEvent e) {}
	public void keyReleased(KeyEvent e) {}
	
}

