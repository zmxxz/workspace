package com.ComputerNetwork;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintStream;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.ServerSocket;
import java.net.Socket;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextArea;



public class MyServer{
	public static void main(String[] args) throws IOException{
		DatagramSocket socket = new DatagramSocket(3333);
		DatagramPacket packet = null;
		byte[] data = null;
		int count = 0;
		System.out.println("===服务器已启动===");
		while(true){
			data = new byte[1024];
			packet = new DatagramPacket(data,data.length);
			socket.receive(packet);
			new Thread(new UDPThread(socket,packet)).start();
			count++;
		}
	}
}

class UDPThread implements Runnable{
	DatagramSocket socket = null;
	DatagramPacket packet = null;
	public UDPThread(DatagramSocket socket,DatagramPacket packet){
		this.socket = socket;
		this.packet = packet;
	}
	public void run(){
		String info = null;
		InetAddress address = null;
		byte[] data2 = null;
		DatagramPacket packet2 = null;
		packet2 = new DatagramPacket(packet.getData(),packet.getLength(),packet.getAddress(),packet.getPort());
		//info = new String(packet.getData(),0,packet.getLength());
		try {
			socket.send(packet2);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}